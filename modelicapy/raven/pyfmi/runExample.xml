<?xml version="1.0" ?>
<Simulation verbosity="debug">
	<TestInfo>
		<name>lorenzExample</name>
		<author>Scott Greenwood</author>
		<created>2018-10-16</created>
		<classesTested>PyFMI-RAVEN interface</classesTested>
		<description>
		   This file runs a parameter sweep for the Lorenz System Model in TRANSFORM through RAVEN using PyFMI.
		</description>
	</TestInfo>

  
	<RunInfo>
		<JobName>StatisticalAnalysis</JobName>
		<WorkingDir>pyfmi_raven</WorkingDir>
		<Sequence>runSteps,createOutput,processRuns</Sequence>
		<batchSize>2</batchSize>
	</RunInfo>


	<Files>
		<Input name="referenceInput" type="input">../referenceInput.txt</Input>
		<Input name="statisticsOutput" type="">statisticsOutput.xml</Input>
	</Files>
	
	
	<Models>
		<Code name="testModel" subType="GenericCode">
			<executable>simulate.py</executable>
			<clargs arg="python" type="prepend" />		
			<clargs arg="" extension=".txt" type="input"/>
			<clargs arg="" extension=".csv" type="output"/>
		</Code>
				
		<PostProcessor name="statisticalAnalysis" subType="BasicStatistics">
			<skewness prefix="skew">gOutputs_notime</skewness>
			<variationCoefficient prefix="vc">gOutputs_notime</variationCoefficient>
			<percentile prefix="percentile">gOutputs_notime</percentile>
			<expectedValue prefix="mean">gOutputs_notime</expectedValue>
			<kurtosis prefix="kurt">gOutputs_notime</kurtosis>
			<median prefix="median">gOutputs_notime</median>
			<maximum prefix="max">gOutputs_notime</maximum>
			<minimum prefix="min">gOutputs_notime</minimum>
			<samples prefix="samp">gOutputs_notime</samples>
			<variance prefix="var">gOutputs_notime</variance>
			<sigma prefix="sigma">gOutputs_notime</sigma>
			<NormalizedSensitivity prefix="nsen">
				<targets>gOutputs_notime</targets>
				<features>gInputs</features>
			</NormalizedSensitivity>
			<sensitivity prefix="sen">
				<targets>gOutputs_notime</targets>
				<features>gInputs</features>
			</sensitivity>
			<pearson prefix="pear">
				<targets>gOutputs_notime</targets>
				<features>gInputs</features>
			</pearson>
			<covariance prefix="cov">
				<targets>gOutputs_notime</targets>
				<features>gInputs</features>
			</covariance>
			<VarianceDependentSensitivity prefix="vsen">
				<targets>gOutputs_notime</targets>
				<features>gInputs</features>
			</VarianceDependentSensitivity>
		</PostProcessor>
	</Models>
	
	
	<DataObjects>
		<PointSet name="pointValues">
			<Input>gInputs</Input>
			<Output>gOutputs</Output>
		</PointSet>
		
		<HistorySet name="history">
		  <Input>gInputs</Input>
		  <Output>gOutputs</Output>
		</HistorySet>
		
		<PointSet name="statisticalAnalysisOutput">
			<Output>statisticalAnalysis_vars</Output>
		</PointSet>
	</DataObjects>
	

	<Distributions>
		<Uniform name="dsigma">
			<upperBound>20</upperBound>
			<lowerBound>0</lowerBound>
		</Uniform>

		<Uniform name="drho">
			<upperBound>56</upperBound>
			<lowerBound>0</lowerBound>
		</Uniform>
		
		<Uniform name="dbeta">
			<upperBound>5.3333</upperBound>
			<lowerBound>0</lowerBound> 
		</Uniform>
	</Distributions>


	<Samplers>
		<MonteCarlo name="monteCarlo">
			<samplerInit>
				<limit>27</limit>
			</samplerInit>

			<variable name="sigma">
				<distribution>dsigma</distribution>
			</variable>

			<variable name="rho">
				<distribution>drho</distribution>
			</variable>
			
			<variable name="beta">
				<distribution>dbeta</distribution>
			</variable>
		</MonteCarlo>
		
		<Grid name='simpleGrid'>
			<variable name='sigma'>
				<distribution>dsigma</distribution>
				<grid type='value' construction='equal' steps='3' >0 20</grid>
			</variable>
			<variable name='rho'>
				<distribution>drho</distribution>
				<grid type='value' construction='equal' steps='3' >0 56</grid>
			</variable>
			<variable name='beta'>
				<distribution>dbeta</distribution>
				<grid type='value' construction='equal' steps='3' >0 5.3333</grid>
			</variable>
		</Grid>
	</Samplers>

	
	<Steps>
		<MultiRun name="runSteps">
			<Input class="Files" type="input">referenceInput</Input>
			<Model class="Models" type="Code">testModel</Model>
			<Sampler class="Samplers" type="Grid">simpleGrid</Sampler>
			<!--<Sampler class="Samplers" type="MonteCarlo">monteCarlo</Sampler>-->
			<Output class="DataObjects" type="PointSet">pointValues</Output>
			<Output class="DataObjects" type="HistorySet">history</Output>
		</MultiRun>

		<IOStep name="createOutput">
			<Input class="DataObjects" type="PointSet">pointValues</Input>
			<Input class="DataObjects" type="HistorySet">history</Input>
			<Output class="OutStreams" type="Print">pointValues</Output>
			<Output class="OutStreams" type="Print">history</Output>
			<Output class="OutStreams" type="Plot">historyPlot</Output>
			<Output class="OutStreams" type="Plot">sampleSpace</Output>
		</IOStep>
		
		<PostProcess name="processRuns">
			<Input class="DataObjects" type="PointSet">pointValues</Input>
			<Model class="Models" type="PostProcessor">statisticalAnalysis</Model>
			<Output class="DataObjects" type="PointSet">statisticalAnalysisOutput</Output>
			<Output class="OutStreams" type="Print">statisticalAnalysisOutput_dump</Output>
		</PostProcess>
	</Steps>

	
	<VariableGroups>
		<Group name="gInputs" >sigma,rho,beta</Group>
		<Group name="gOutputs" >time,lorenzSystem.x,lorenzSystem.y,lorenzSystem.z</Group>
		<Group name="gOutputs_notime" dependencies="gOutputs" base="gOutputs">-time</Group>
		<Group name="statisticalAnalysis_vars">
			skew_lorenzSystem.x,
			skew_lorenzSystem.y,
			skew_lorenzSystem.z,
			vc_lorenzSystem.x,
			vc_lorenzSystem.y,
			vc_lorenzSystem.z,
			percentile_5_lorenzSystem.x,
			percentile_95_lorenzSystem.x,
			percentile_5_lorenzSystem.y,
			percentile_95_lorenzSystem.y,
			percentile_5_lorenzSystem.z,
			percentile_95_lorenzSystem.z,
			mean_lorenzSystem.x,
			mean_lorenzSystem.y,
			mean_lorenzSystem.z,
			kurt_lorenzSystem.x,
			kurt_lorenzSystem.y,
			kurt_lorenzSystem.z,
			median_lorenzSystem.x,
			median_lorenzSystem.y,
			median_lorenzSystem.z,
			max_lorenzSystem.x,
			max_lorenzSystem.y,
			max_lorenzSystem.z,
			min_lorenzSystem.x,
			min_lorenzSystem.y,
			min_lorenzSystem.z,
			samp_lorenzSystem.x,
			samp_lorenzSystem.y,
			samp_lorenzSystem.z,
			var_lorenzSystem.x,
			var_lorenzSystem.y,
			var_lorenzSystem.z,
			sigma_lorenzSystem.x,
			sigma_lorenzSystem.y,
			sigma_lorenzSystem.z,
			nsen_lorenzSystem.x_sigma,
			nsen_lorenzSystem.x_rho,
			nsen_lorenzSystem.x_beta,
			nsen_lorenzSystem.y_sigma,
			nsen_lorenzSystem.y_rho,
			nsen_lorenzSystem.y_beta,
			nsen_lorenzSystem.z_sigma,
			nsen_lorenzSystem.z_rho,
			nsen_lorenzSystem.z_beta,
			sen_lorenzSystem.x_sigma,
			sen_lorenzSystem.x_rho,
			sen_lorenzSystem.x_beta,
			sen_lorenzSystem.y_sigma,
			sen_lorenzSystem.y_rho,
			sen_lorenzSystem.y_beta,
			sen_lorenzSystem.z_sigma,
			sen_lorenzSystem.z_rho,
			sen_lorenzSystem.z_beta,
			pear_lorenzSystem.x_sigma,
			pear_lorenzSystem.x_rho,
			pear_lorenzSystem.x_beta,
			pear_lorenzSystem.y_sigma,
			pear_lorenzSystem.y_rho,
			pear_lorenzSystem.y_beta,
			pear_lorenzSystem.z_sigma,
			pear_lorenzSystem.z_rho,
			pear_lorenzSystem.z_beta,
			cov_lorenzSystem.x_sigma,
			cov_lorenzSystem.x_rho,
			cov_lorenzSystem.x_beta,
			cov_lorenzSystem.y_sigma,
			cov_lorenzSystem.y_rho,
			cov_lorenzSystem.y_beta,
			cov_lorenzSystem.z_sigma,
			cov_lorenzSystem.z_rho,
			cov_lorenzSystem.z_beta,
			vsen_lorenzSystem.x_sigma,
			vsen_lorenzSystem.x_rho,
			vsen_lorenzSystem.x_beta,
			vsen_lorenzSystem.y_sigma,
			vsen_lorenzSystem.y_rho,
			vsen_lorenzSystem.y_beta,
			vsen_lorenzSystem.z_sigma,
			vsen_lorenzSystem.z_rho,
			vsen_lorenzSystem.z_beta
		</Group>
	</VariableGroups>
	
	
	<OutStreams>
		<Print name="pointValues">
			<type>csv</type>
			<source>pointValues</source>
		</Print>
		
		<Print name="history">
			<type>csv</type>
			<source>history</source>
		</Print>

		<Print name="statisticalAnalysisOutput_dump">
			<type>csv</type>
			<source>statisticalAnalysisOutput</source>
		</Print>
		
		<Plot name="historyPlot" overwrite="false" verbosity="debug">
			<plotSettings>
				<gridSpace>2 2</gridSpace>
				<plot>
					<type>line</type>
					<x>history|Output|time</x>
					<y>history|Output|lorenzSystem.x</y>
					<gridLocation>
						<x>0</x>
						<y>0</y>
					</gridLocation>
					<xlabel>time (s)</xlabel>
					<ylabel>x</ylabel>
				</plot>
				<plot>
					<type>line</type>
					<x>history|Output|time</x>
					<y>history|Output|lorenzSystem.y</y>
					<gridLocation>
						<x>1</x>
						<y>0</y>
					</gridLocation>
					<xlabel>time (s)</xlabel>
					<ylabel>y</ylabel>
				</plot>
				<plot>
					<type>line</type>
					<x>history|Output|time</x>
					<y>history|Output|lorenzSystem.z</y>
					<gridLocation>
						<x>0 2</x>
						<y>1</y>
					</gridLocation>
					<xlabel>time (s)</xlabel>
					<ylabel>z</ylabel>
				</plot>
			</plotSettings>
			<actions>
				<how>png</how>
				<title>
					<text> </text>
				</title>
			</actions>
		</Plot>
		
		<Plot name="sampleSpace" overwrite="false" verbosity="debug">
			<plotSettings>
				<plot>
					<type>scatter</type>
					<x>pointValues|Input|sigma</x>
					<y>pointValues|Input|rho</y>
					<z>pointValues|Input|beta</z>
					<color>blue</color>
				</plot>
				<xlabel>sigma</xlabel>
				<ylabel>rho</ylabel>
				<zlabel>beta</zlabel>
			</plotSettings>
			<actions>
				<how>png</how>
				<title>
					<text> </text>
				</title>
			</actions>
		</Plot>
	</OutStreams>
</Simulation>
