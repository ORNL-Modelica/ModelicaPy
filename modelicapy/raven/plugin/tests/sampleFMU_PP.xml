<?xml version="1.0" ?>
<Simulation verbosity="debug">
	<TestInfo>
		<name>lotkaVolterraExample</name>
		<author>Scott Greenwood</author>
		<created>2022-01-11</created>
		<classesTested>FMPy-RAVEN interface</classesTested>
		<description>
		   Simple  Model: Sample the FMU with a Post Process Step.
		   Extra:
			- PostProcess step used for creating an inner raven loop for optimization.
			- Two methods for reading a csv are attempted:To switch, comment/uncomment the appropriate block in the "Steps" section.
				1. Using the built in reading CSV method requires two layers of csv files.
				2. Use a custom external model.
			- PostProcess returns more than one metric so an externalModel sums the output to a single value for optimization.
		</description>
	</TestInfo>

  
	<RunInfo>
		<JobName>SampleFMU</JobName>
		<WorkingDir>test_sampleFMU_PP</WorkingDir>
		<Sequence>loadData, sampleFMU, postProcess, weightPP</Sequence>
		<batchSize>1</batchSize>
	</RunInfo>


	<Files>
		<Input name="goldValuesFile" type="csv">../goldValues/calibrateFMU_lotkaVolterra_testList.csv</Input>
	</Files>


	<Steps>
		<IOStep name="loadData">
			<Input class="Files" type="">goldValuesFile</Input>
			<Output class="DataObjects" type="HistorySet">goldValues</Output>
		</IOStep>
		<!-- <MultiRun name='loadData'>
			<Input class="DataObjects" type="PointSet">placeholder</Input>
			<Model class='Models' type='ExternalModel'>loadGoldValues</Model>
			<Sampler class="Samplers" type="MonteCarlo">dummy</Sampler>
			<Output class="DataObjects" type="HistorySet">goldValues</Output>
		</MultiRun> -->
		<MultiRun name="sampleFMU">
			<Input class="DataObjects" type="PointSet">placeholder</Input>
			<Model class="Models" type="ExternalModel">simulateFMU</Model>
			<Sampler class="Samplers" type="MonteCarlo">monteCarlo</Sampler>
			<Output class="DataObjects" type="PointSet">pointValues</Output>
			<Output class="DataObjects" type="HistorySet">history</Output>
		</MultiRun>
		<PostProcess name="postProcess">
			<Input class="DataObjects" type="HistorySet">goldValues</Input>
			<Input class="DataObjects" type="HistorySet">history</Input>
			<Model class="Models" type="PostProcessor">pp</Model>
			<Output class="DataObjects" type="PointSet">pp_out</Output>
		</PostProcess>
		<MultiRun name='weightPP'>
			<Input class="DataObjects" type="PointSet">pp_out</Input>
			<Model class='Models' type='ExternalModel'>weightPostProcess</Model>
			<Sampler class="Samplers" type="MonteCarlo">dummy</Sampler>
			<Output class="DataObjects" type="PointSet">weight_out</Output>
			<Output class="OutStreams" type="Print">inner_out</Output>
		</MultiRun>
	</Steps>


	<Models>
		<ExternalModel ModuleToLoad="../../src/loadData" name="loadGoldValues" subType="">
			<variables>gOutputs</variables>
			<settings>
				<filename>goldValues/calibrateFMU_lotkaVolterra1.csv</filename>
				<outputs>gOutputs</outputs>
			</settings>
		</ExternalModel>
		<ExternalModel ModuleToLoad="../../src/simulateFMU" name="simulateFMU" subType="">
			<inputs>gInputs</inputs>
			<outputs>gOutputs</outputs>
			<settings>
				<filename>../fmus/lotkaVolterra.fmu</filename>
				<parameters>gInputs</parameters>
				<outputs>gOutputs</outputs>
			</settings>
		</ExternalModel>
		<PostProcessor name="pp" subType="Metric">
			<Features type="variable">goldValues|Output|x,goldValues|Output|y</Features>
			<Targets type="variable">history|Output|x,history|Output|y</Targets>
			<pivotParameter>time</pivotParameter>
			<Metric class="Metrics" type="Metric">DTW</Metric>
		</PostProcessor>
		<ExternalModel ModuleToLoad="../../src/weightPostProcess" name="weightPostProcess" subType="">
			<inputs>gPostProcess</inputs>
			<outputs>ans</outputs>
			<settings>
				<parameters>gPostProcess</parameters>
				<weights>1.0, 1.0</weights>
			</settings>
		</ExternalModel>
	</Models>
	

	<Metrics>
		<Metric name="DTW" subType="DTW">
		  <order>0</order>
		  <localDistance>euclidean</localDistance>
		</Metric>
	</Metrics>


	<DataObjects>
		<PointSet name="placeholder"/>
		<PointSet name="pointValues">
			<Input>gInputs</Input>
			<Output>gOutputs</Output>
		</PointSet>
		<HistorySet name="history">
		  <Input>gInputs</Input>
		  <Output>gOutputs</Output>
		</HistorySet>
		<HistorySet name="goldValues">
			<Output>gOutputs</Output>
		</HistorySet>
		<PointSet name="pp_out">
			<Output>gPostProcess</Output>
		</PointSet>
		<PointSet name="weight_out">
			<Output>ans</Output>
		</PointSet>
	</DataObjects>

	
	<VariableGroups>
		<Group name="gInputs">x_start, y_start, alpha, beta, gamma, delta</Group>
		<Group name="gOutputs">time, x, y</Group>
		<Group name="gOutputs_notime">gOutputs, -time</Group>
		<Group name="gPostProcess">DTW_history_Output_x_goldValues_Output_x,DTW_history_Output_y_goldValues_Output_y</Group>
	</VariableGroups>

	<Samplers>
		<MonteCarlo name="dummy">
			<samplerInit>
			  <limit>1</limit>
			</samplerInit>
		  </MonteCarlo>
		<MonteCarlo name="monteCarlo">
		  <samplerInit>
			<limit>1</limit>
		  </samplerInit>
		  <constant name="output_interval">0.1</constant>
		  <constant name="x_start">10</constant>
		  <constant name="y_start">5</constant>
		  <constant name="alpha">1.5</constant>
		  <constant name="beta">1</constant>
		  <constant name="gamma">3</constant>
		  <constant name="delta">1</constant>
		</MonteCarlo>
	  </Samplers>

	
	<OutStreams>
		<Print name="pointValues">
			<type>csv</type>
			<source>pointValues</source>
		</Print>
		<Print name="history">
			<type>csv</type>
			<source>history</source>
		</Print>
		<Print name="inner_out">
			<type>csv</type>
			<source>weight_out</source>
			<what>Output|ans</what>
		</Print>
	</OutStreams>
</Simulation>
